<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++Tips</title>
      <link href="/2023/10/21/post-2/"/>
      <url>/2023/10/21/post-2/</url>
      
        <content type="html"><![CDATA[<p><strong>输出多行</strong><br>cout&lt;&lt;R”**”;</p><p><strong>右对齐</strong><br><iomanio>  setw(8) &#x2F;&#x2F;每个字符占8个宽度</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kfdvhd</title>
      <link href="/2023/10/21/kfdvhd/"/>
      <url>/2023/10/21/kfdvhd/</url>
      
        <content type="html"><![CDATA[<h1 id="Java语言概述"><a href="#Java语言概述" class="headerlink" title="Java语言概述"></a>Java语言概述</h1><h2 id="0、术语"><a href="#0、术语" class="headerlink" title="0、术语"></a>0、术语</h2><p>1、&#x3D;&#x3D;JDK&#x3D;&#x3D; &#x3D; JRE + 开发者工具<br>2、&#x3D;&#x3D;JRE&#x3D;&#x3D; &#x3D; JVM + Java SE标准类库<br>3、&#x3D;&#x3D;API&#x3D;&#x3D;：提供的基本编程接口（Systme.out），有相应的<a href="https://www.oracle.com/java/technologies/javase-jdk17-doc-downloads.html">API文档</a><br>4、核心机制：&#x3D;&#x3D;JVM&#x3D;&#x3D;：java虚拟机，是java程序的运行环境（字节码文件在JVM中跑）<br>JVM功能：跨平台性、自动内存管理（分配，回收）</p><h2 id="一、hello-java"><a href="#一、hello-java" class="headerlink" title="一、hello java"></a>一、hello java</h2><p>1、&#x3D;&#x3D;开发步骤&#x3D;&#x3D;<br><strong>编写</strong>.java源文件 –&gt; 通过javac.exe<strong>编译</strong>生成字节码文件 –&gt; 通过java.exe生成class文件<strong>运行</strong></p><hr><p>2、&#x3D;&#x3D;编写&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class HelloJava&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        System.out.println(&quot;hellojava&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>①、class:关键字，后面跟类名<br>②、public static void main(String[] args):main方法格式固定,程序入口<br>③、System.out.println(“”)：控制台输出数据    &#x2F;&#x2F;输出换行<br>   System.out.print(“”);                   &#x2F;&#x2F;不换行<br>   println(“<strong>“+ 变量 +”</strong>“+变量)           &#x3D;&#x3D;&#x2F;&#x2F;同时输出变量和内容&#x3D;&#x3D;<br>④、println中文时，另存为.java文件为ANSI文件<br>⑤、println换行：直接println();<br>⑥、&#x3D;&#x3D;\t&#x3D;&#x3D;:制表符（一定长度的空格：tab键）  &#x3D;&#x3D;\n&#x3D;&#x3D;:换行     &#x2F;&#x2F;需要在“”内使用</p><h2 id="二、注释"><a href="#二、注释" class="headerlink" title="二、注释"></a>二、注释</h2><p>&#x3D;&#x3D;注释&#x3D;&#x3D;：<br>①、&#x2F;&#x2F;注释：单行注释<br>②、&#x2F;<em>注释</em>&#x2F;：多行注释<br>③、&#x2F;**<br>        @author<br>        @version<br>    *&#x2F;                文档注释，可以被javadoc解析，生成网页文件的程序说明文档（javadoc -d docname -author -version classname.java）</p><h1 id="变量与运算符"><a href="#变量与运算符" class="headerlink" title="变量与运算符"></a>变量与运算符</h1><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p>定义：被java赋予了特殊含义，用作专门用途的字符串（class、public、static、void），全是小写字母，<a href="http://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html">关键字官方地址</a></p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>定义：变量、方法、类等命名时使用的字符序列<br>命名规则：区分大小写，数字不开头，可用_$符号<br>&#x3D;&#x3D;命名规范&#x3D;&#x3D;:<br>类名：多单词组成，所有首字母大写<br>变量名：多单词组成，第一个首字母小写，其他大写<br>常量名：所有字母大写，下划线连接<br>包名：所有首字母小写</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>基本数据类型:整型（byte1\short2\int4\long8）、浮点型(float7、double)、字符型、布尔型（boolean）<br>引用数据类型:类（class）、数组（array）、接口（interface）、枚举（enum）、注解（annotation）、记录（record）<br>补充：1字节（Byte）&#x3D;8位（bit）<br>注意：<br>①、声明long变量时，需要提供后缀’l’或’L’(long l1 &#x3D; 123123123L;)<br>②、声明float时，需要后缀’f’或者’F’<br>③、需要精确精度，需要使用BigDecimal类</p><p>&#x3D;&#x3D;char的注意事项&#x3D;&#x3D;<br>①、、char c1 &#x3D; ‘a’           (单引号，只能赋予一个符号)<br>②、char可直接使用Unicode值或ASCII码表示字符常量（char c11 &#x3D; 97; char c10 &#x3D; ‘\u0036’）<br>③、可使用转义字符（char c9 &#x3D; ‘\n’）</p><hr><p>&#x3D;&#x3D;自动类型提升规则:&#x3D;&#x3D;<br><strong>1、定义</strong>：当&#x3D;&#x3D;容量&#x3D;&#x3D;小的与容量大的运算，结果自动转换为容量大的数据类型<br><strong>2、大小</strong>:tyte、short、char—&gt;int—&gt;long—&gt;float—&gt;double<br><strong>3、特殊：</strong><br>    byte + short &#x3D; int<br>    char + byte &#x3D; int<br><strong>4、解释后缀l、f：</strong><br>    long l2 &#x3D; 123;（123本是4个字节，赋给long后自动转换）<br>    long 14 &#x3D; 123123123123(因为超出int范围，所以报错)</p><hr><p>&#x3D;&#x3D;强制类型转换&#x3D;&#x3D;<br>int i1 &#x3D; 1;<br>byte b1 &#x3D; byte(i1);</p><hr><p>&#x3D;&#x3D;String类的基本使用&#x3D;&#x3D;<br>String可与基本数据类型做连接运算，使用+<br>实现将String转为int：int num3 &#x3D; Integer.parseInt(str)</p><hr><p>&#x3D;&#x3D;进制:&#x3D;&#x3D;<br>二进制：0b开头<br>8进制：0开头<br>16进制：0x开头，0<del>9，a</del>f</p><hr><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>1、++、–使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    int i = 1;</span><br><span class="line">    int j = i++ + ++1 * i++;</span><br><span class="line">//j = 10;</span><br><span class="line">    System.out.println(&quot;j&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/21/hello-world/"/>
      <url>/2023/10/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
